<%@ jet 
imports="
    org.talend.core.model.process.INode 
    org.talend.core.model.process.IConnection
    org.talend.core.model.process.IConnectionCategory 
    org.talend.core.model.process.ElementParameterParser 
    org.talend.designer.codegen.config.CodeGeneratorArgument
    org.talend.core.model.metadata.IMetadataTable 
    org.talend.core.model.metadata.IMetadataColumn
    org.talend.core.model.metadata.types.JavaTypesManager
    org.talend.core.model.metadata.types.JavaType
    java.util.List
" 
%>
	<%@ include file="../templates/Log4j/Log4jFileUtil.javajet"%>
<%
		CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
		INode node = (INode)codeGenArgument.getArgument();
		String cid = node.getUniqueName();
		
		String useExistingConn = ElementParameterParser.getValue(node,"__USE_EXISTING_CONNECTION__");
		String accessToken = ElementParameterParser.getValue(node, "__ACCESS_TOKEN__");
		String expiresIn = ElementParameterParser.getValue(node, "__EXPIRES_IN__");
		String refreshToken = ElementParameterParser.getValue(node, "__REFRESH_TOKEN__");
		String tokenType = ElementParameterParser.getValue(node, "__TOKEN_TYPE__");
		
		String clientId = ElementParameterParser.getValue(node, "__CLIENT_ID__");
		String clientSecret = ElementParameterParser.getValue(node, "__CLIENT_SECRET__");
		
		String connection = ElementParameterParser.getValue(node,"__CONNECTION__");
	    String connectionKey = "\"conn_" + connection+"\"";
		
		String boxPath = ElementParameterParser.getValue(node, "__PATH__");
		String filePath = ElementParameterParser.getValue(node, "__FILE_PATH__");
		
		String exposeOutput = ElementParameterParser.getValue(node, "__EXPOSE_OUTPUT_STREAM__");
		boolean dieOnError = "true".equals(ElementParameterParser.getValue(node, "__DIE_ON_ERROR__"));
		
		final boolean isLog4jEnabled = ("true").equals(ElementParameterParser.getValue(node.getProcess(), "__LOG4J_ACTIVATE__"));
				log4jFileUtil.componentStartInfo(node);
%>
<%
if(!"true".equals(useExistingConn)){
	String useProxy = ElementParameterParser.getValue(node,"__USE_PROXY__");
	String proxyHost = ElementParameterParser.getValue(node,"__PROXY_HOST__");
	String proxyPort = ElementParameterParser.getValue(node,"__PROXY_PORT__");
%>
	com.box.boxjavalibv2.BoxRESTClient <%=cid%>_httpClient = new com.box.boxjavalibv2.BoxRESTClient();
<%
	if("true".equals(useProxy)){
%>   
		<%=cid%>_httpClient.setConnectionTimeOut(3000);
		org.apache.http.HttpHost <%=cid%>_proxy = new org.apache.http.HttpHost(<%=proxyHost%>, <%=proxyPort%>, "http");
		org.apache.http.client.HttpClient <%=cid%>_cl = <%=cid%>_httpClient.getRawHttpClient();
		<%=cid%>_cl.getParams().setParameter(org.apache.http.conn.params.ConnRoutePNames.DEFAULT_PROXY, <%=cid%>_proxy);
<%
	}else{
%>
<%
	}
%>
	com.box.boxjavalibv2.BoxClient <%=cid%>_client = new com.box.boxjavalibv2.BoxClient(<%=clientId%>, <%=clientSecret%>, null, null, <%=cid%>_httpClient, new com.box.boxjavalibv2.BoxConfigBuilder().build());
	java.util.Map<String, Object> <%=cid%>_map = new java.util.HashMap<String, Object>();
    <%=cid%>_map.put(com.box.boxjavalibv2.dao.BoxOAuthToken.FIELD_ACCESS_TOKEN, <%=accessToken%>);
    <%=cid%>_map.put(com.box.boxjavalibv2.dao.BoxOAuthToken.FIELD_EXPIRES_IN, <%=expiresIn%>);
    <%=cid%>_map.put(com.box.boxjavalibv2.dao.BoxOAuthToken.FIELD_REFRESH_TOKEN, <%=refreshToken%>);
    <%=cid%>_map.put(com.box.boxjavalibv2.dao.BoxOAuthToken.FIELD_TOKEN_TYPE, <%=tokenType%>);
      
    <%=cid%>_client.authenticate(new com.box.boxjavalibv2.dao.BoxOAuthToken(<%=cid%>_map));
    <%=cid%>_client.getOAuthDataController().setAutoRefreshOAuth(true);
<%
	} else {
%>
	com.box.boxjavalibv2.BoxClient <%=cid%>_client = (com.box.boxjavalibv2.BoxClient)globalMap.get(<%=connectionKey%>);
<%
}
%>
	String <%=cid%>_filePath = normalizePath(<%=filePath%>);
	String <%=cid%>_remotePath = normalizePath(<%=boxPath%>);
	boolean <%=cid%>_hasError = false;
	String <%=cid%>_remoteName = getFolderFromPath(<%=cid%>_remotePath);
	
	com.box.boxjavalibv2.dao.BoxFile <%=cid%>_boxFile = null;
	com.box.boxjavalibv2.dao.BoxFolder <%=cid%>_boxFolder = null;
<%if("true".equals(exposeOutput)){%>
	java.io.ByteArrayOutputStream <%=cid%>_uploader_output = new java.io.ByteArrayOutputStream();
	java.io.ByteArrayInputStream <%=cid%>_uploader_input = null;
	globalMap.put("<%=cid%>_OUTPUTSTREAM", <%=cid%>_uploader_output);
	try
	{
<%}%>
			