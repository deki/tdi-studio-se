<%@ jet 
imports="
    org.talend.core.model.process.INode 
    org.talend.core.model.process.IConnection
    org.talend.core.model.process.IConnectionCategory 
    org.talend.core.model.process.ElementParameterParser 
    org.talend.designer.codegen.config.CodeGeneratorArgument
    org.talend.core.model.metadata.IMetadataTable 
    org.talend.core.model.metadata.IMetadataColumn
    org.talend.core.model.metadata.types.JavaTypesManager
    org.talend.core.model.metadata.types.JavaType
    java.util.List
" 
%>

<%
		CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
		INode node = (INode)codeGenArgument.getArgument();
		String cid = node.getUniqueName();
		
		String useExistingConn = ElementParameterParser.getValue(node,"__USE_EXISTING_CONNECTION__");
		String accessToken = ElementParameterParser.getValue(node,"__ACCESS_TOKEN__");
	    String connection = ElementParameterParser.getValue(node,"__CONNECTION__");
	    String connectionKey = "\"conn_" + connection+"\"";
	    
	    String uploadLocalFile = ElementParameterParser.getValue(node, "__UPLOAD_LOCAL_FILE__");
	    String localFilePath = ElementParameterParser.getValue(node, "__LOCAL_FILE_PATH__");
	    
		String readContentFromInput = ElementParameterParser.getValue(node, "__READ_CONTENT_FROM_INPUT__");
		String exposeOutput = ElementParameterParser.getValue(node, "__EXPOSE_OUTPUT_STREAM__");
		
		String filePath = ElementParameterParser.getValue(node, "__FILE_PATH__");
		
        String dataInputConnection = null;	
        String dataOutputConnection = null;	
        
        if("true".equals(readContentFromInput)){
	        List< ? extends IConnection> inputConnections = node.getIncomingConnections();
		    for(IConnection conn : inputConnections) {
		        if(conn.getLineStyle().hasConnectionCategory(IConnectionCategory.DATA)) {
		        	dataInputConnection = conn.getName();
		        	break;
		        } // if(conn) end
		    } // for(conns) end
		    
		    
			List< ? extends IConnection> outputConnections = node.getOutgoingSortedConnections();
		    for(IConnection conn : outputConnections) {
		        if(conn.getLineStyle().hasConnectionCategory(IConnectionCategory.DATA)) {
		        	dataOutputConnection = conn.getName();
		        	break;
		        } // if(conn) end
		    } // for(conns) end
        }
	    String mode = "com.dropbox.core.DbxWriteMode.add()";
	    if("true".equals(ElementParameterParser.getValue(node,"__FORCE_MODE__"))){
	    	mode = "com.dropbox.core.DbxWriteMode.force()";
	    }else if("true".equals(ElementParameterParser.getValue(node,"__UPDATE_MODE__"))){
	    	mode = "com.dropbox.core.DbxWriteMode.update("+ElementParameterParser.getValue(node,"__REVISION__")+")";
	    }

%>
<%if("true".equals(readContentFromInput)){%>

	<%if(dataInputConnection != null){%>
		Object <%=cid%>_content = <%=dataInputConnection%>.content;
		
		if(<%=cid%>_content == null){
			throw new Exception("The Uploaded Dropbox file Content can't be null");
		}
		
		java.io.InputStream <%=cid%>_InputStream = null;
		if(<%=cid%>_content instanceof byte[]){
			<%=cid%>_InputStream = new java.io.ByteArrayInputStream((byte[])<%=cid%>_content);
		}else if(<%=cid%>_content instanceof java.io.InputStream){
			<%=cid%>_InputStream = (java.io.InputStream)<%=cid%>_content;
		}else{
			<%=cid%>_InputStream = new java.io.ByteArrayInputStream(<%=cid%>_content.toString().getBytes());
		}
		
		try {
			com.dropbox.core.DbxEntry.File <%=cid%>_UploadedFile = <%=cid%>_client.uploadFile(<%=filePath%>,
					<%=mode%>, -1, <%=cid%>_InputStream);
		} finally {
			<%=cid%>_InputStream.close();
		}
		
		<%if(dataOutputConnection != null){%>
			<%=dataOutputConnection%>.content = <%=cid%>_content;
		<%}%>
		
		
	<%}
}else if("true".equals(uploadLocalFile)){%>
	java.io.InputStream <%=cid%>_InputStream = new java.io.BufferedInputStream(new java.io.FileInputStream(<%=localFilePath%>));
	try {
		com.dropbox.core.DbxEntry.File <%=cid%>_UploadedFile = <%=cid%>_client.uploadFile(<%=filePath%>,
				<%=mode%>, -1, <%=cid%>_InputStream);
	} finally {
		<%=cid%>_InputStream.close();
	}
	
	<%if(dataOutputConnection != null){%>
		<%=dataOutputConnection%>.content = <%=cid%>_content;
	<%}%>
<%}%>
			