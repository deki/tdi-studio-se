<%@ jet 
	imports="
        org.talend.core.model.process.ElementParameterParser
        org.talend.core.model.process.INode
        org.talend.designer.codegen.config.CodeGeneratorArgument
	" 
%>
<% 
    CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
    INode node = (INode)codeGenArgument.getArgument();
    String cid = node.getUniqueName();	
%>
<%@ include file="../templates/Log4j/Log4jFileUtil.javajet"%>
<%
	String filename = ElementParameterParser.getValue(node,"__FILENAME__");
	String copybook = ElementParameterParser.getValue(node,"__COPYBOOK__");
	String customSetOriginalLengthStr = ElementParameterParser.getValue(node,"__NO_X2CJ_FILE__");
	boolean customSetOriginalLength = (customSetOriginalLengthStr!=null&&!("").equals(customSetOriginalLengthStr))?("true").equals(customSetOriginalLengthStr):true;
	boolean isLog4jEnabled = ("true").equals(ElementParameterParser.getValue(node.getProcess(), "__LOG4J_ACTIVATE__"));
	log4jFileUtil.componentStartInfo(node);
%>
java.io.File file_<%=cid %> = new java.io.File(<%=filename %>); 
<%
if(("true").equals(ElementParameterParser.getValue(node,"__CREATE__"))){
%>
//create directory only if not exists
 java.io.File parentFile_<%=cid%> = file_<%=cid %>.getParentFile();  
 	if(parentFile_<%=cid%> != null && !parentFile_<%=cid%>.exists()) {  
		<%if(isLog4jEnabled){%>
			log.info("<%=cid%> - Creating directory '" + parentFile_<%=cid%>.getCanonicalPath());
		<%}%>
 	   parentFile_<%=cid%>.mkdirs();
		<%if(isLog4jEnabled){%>
			log.info("<%=cid%> - Create directory '"+ parentFile_<%=cid%>.getCanonicalPath() + "' has succeeded.");
		<%}%>
 	} 
<%
}
%>
  	int nb_line_<%=cid%> = 0;
    java.io.FileOutputStream fOut_<%=cid %> = new java.io.FileOutputStream(<%= filename %>);
<%
if(!customSetOriginalLength){//------11111
%>
    // write file
    javax.xml.bind.JAXBContext jaxbContextW_<%=cid %> = javax.xml.bind.JAXBContext.newInstance("net.sf.cobol2j");
    javax.xml.bind.Unmarshaller unmarshallerW_<%=cid %> = jaxbContextW_<%=cid %>.createUnmarshaller();
    Object oW_<%=cid %> = unmarshallerW_<%=cid %>.unmarshal(new java.io.FileInputStream(<%= copybook %>));
    net.sf.cobol2j.FileFormat fFW_<%=cid %> = (net.sf.cobol2j.FileFormat) oW_<%=cid %>;
    net.sf.cobol2j.RecordWriter rwriter_<%=cid %> = new net.sf.cobol2j.RecordWriter(fOut_<%=cid %>, fFW_<%=cid %> );
<%
}
%>