<%@ jet
	imports="
	java.util.Arrays
	java.util.ArrayList
	java.util.HashMap
	java.util.List
	java.util.Map
	
	org.talend.core.model.metadata.IMetadataColumn
	org.talend.core.model.metadata.IMetadataTable
	org.talend.core.model.metadata.types.JavaType
	org.talend.core.model.metadata.types.JavaTypesManager
	org.talend.core.model.process.ElementParameterParser
	org.talend.core.model.process.IConnection
	org.talend.core.model.process.IConnectionCategory
	org.talend.core.model.process.INode
	org.talend.designer.codegen.config.CodeGeneratorArgument
	org.talend.core.model.utils.TalendTextUtils
	"
%>

<%
	CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
	INode node = (INode)codeGenArgument.getArgument();
	String cid = node.getUniqueName();
	
	List<? extends IConnection> outputConnections = node.getOutgoingSortedConnections();
	if((outputConnections == null) || (outputConnections.size() == 0)) {
		return "";
	}
	IConnection outputConnection = outputConnections.get(0);
	
	if(!outputConnection.getLineStyle().hasConnectionCategory(IConnectionCategory.DATA)) {
		return "";
	}
	
	List<IMetadataTable> metadatas = node.getMetadataList();
	if ((metadatas == null) && (metadatas.size() == 0) || (metadatas.get(0) == null)) {
		return "";
	}
	IMetadataTable metadata = metadatas.get(0);
	
	List<IMetadataColumn> columnList = metadata.getListColumns();
	if((columnList == null) || (columnList.size() == 0)) {
		return "";
	}
	
	String client = ElementParameterParser.getValue(node, "__CLIENT__");
	String userid = ElementParameterParser.getValue(node, "__USERID__");
	String password = ElementParameterParser.getValue(node, "__PASSWORD__");
	String language = ElementParameterParser.getValue(node, "__LANGUAGE__");
	String hostname = ElementParameterParser.getValue(node, "__HOSTNAME__");
	String systemnumber = ElementParameterParser.getValue(node, "__SYSTEMNUMBER__");
	
	String systemId = ElementParameterParser.getValue(node,"__SYSTEMID__");
	String groupName = ElementParameterParser.getValue(node,"__GROUPNAME__");
	
	String serverType = ElementParameterParser.getValue(node,"__SERVERTYPE__");
	
	String tableName = ElementParameterParser.getValue(node, "__TABLE__");
	String filter = ElementParameterParser.getValue(node, "__FILTER__");
	
	String startRowNumber = ElementParameterParser.getValue(node, "__START_ROW__");
	String maxRowCount = ElementParameterParser.getValue(node, "__MAX_ROW_COUNT__");
	
	List<Map<String, String>> sapProps = (List<Map<String,String>>)ElementParameterParser.getObjectValue(node, "__SAP_PROPERTIES__");
	
	String passwordFieldName = "__PASSWORD__";
%>
	<%@ include file="@{org.talend.designer.components.localprovider}/components/templates/password.javajet"%>

	java.util.Properties properties_<%=cid%> = new java.util.Properties();
    properties_<%=cid%>.put(org.talend.sap.ISAPConnection.PROP_CLIENT, <%=client%>);
    properties_<%=cid%>.put(org.talend.sap.ISAPConnection.PROP_USER, <%=userid%>);
    properties_<%=cid%>.put(org.talend.sap.ISAPConnection.PROP_PASSWORD, decryptedPassword_<%=cid%>);
    properties_<%=cid%>.put(org.talend.sap.ISAPConnection.PROP_LANGUAGE, <%=language%>);
    
    <%if("ApplicationServer".equals(serverType)){%>
    properties_<%=cid%>.put(org.talend.sap.ISAPConnection.PROP_APPLICATION_SERVER_HOST, <%=hostname%>);
    properties_<%=cid%>.put(org.talend.sap.ISAPConnection.PROP_SYSTEM_NUMBER, <%=systemnumber%>);
    <%}else{%>
    properties_<%=cid%>.put("jco.client.mshost", <%=hostname%>);
    properties_<%=cid%>.put("jco.client.r3name", <%=systemId%>);
    properties_<%=cid%>.put("jco.client.group", <%=groupName%>);
    <%}%>
    
<%
    if(sapProps!=null) {
		for(Map<String, String> item : sapProps){
%>
		properties_<%=cid%>.put(<%=item.get("PROPERTY") %> ,<%=item.get("VALUE") %>);
<% 
		}
    }
%>
    
	org.talend.sap.ISAPConnection connection_<%=cid%> = org.talend.sap.impl.SAPConnectionFactory.getInstance().createConnection(properties_<%=cid%>);
	org.talend.sap.service.ISAPTableDataService dataService_<%=cid%> = connection_<%=cid%>.getTableDataService();
	
	java.util.List<String> fieldNames_<%=cid%> = new java.util.LinkedList<String>();
<%
	for(int i=0;i<columnList.size();i++) {
		IMetadataColumn column = columnList.get(i);
		
		String tableField= column.getOriginalDbColumnName();
%>
		fieldNames_<%=cid%>.add("<%=tableField%>");
<%
	}
%>	
	try {
 		org.talend.sap.model.table.ISAPTableData data_<%=cid%> = dataService_<%=cid%>.getTableData(<%=tableName%>, fieldNames_<%=cid%>, <%=filter%>, <%=maxRowCount%>,<%=startRowNumber%>);
 	
	 	boolean empty_<%=cid%> = data_<%=cid%>.isEmpty();
	 	
	 	if(!empty_<%=cid%>) {
	 		data_<%=cid%>.firstRow();
	 	}
	 	
		do {
			if(empty_<%=cid%>) {
				break;
			}
			
		
<%
	for(int i=0;i<columnList.size();i++) {
		IMetadataColumn column = columnList.get(i);
	    String typeToGenerate = JavaTypesManager.getTypeToGenerate(column.getTalendType(),column.isNullable());
	    JavaType javaType = JavaTypesManager.getJavaTypeFromId(column.getTalendType());
	    
		if(javaType == JavaTypesManager.STRING) {
%>
			<%=outputConnection.getName() %>.<%=column.getLabel() %> = data_<%=cid%>.getString(<%=i%>);
<%
		} else if(javaType == JavaTypesManager.INTEGER) {
%>
			<%=outputConnection.getName() %>.<%=column.getLabel() %> = data_<%=cid%>.getInteger(<%=i%>);
<%
		} else if(javaType == JavaTypesManager.SHORT) {
%>
			<%=outputConnection.getName() %>.<%=column.getLabel() %> = data_<%=cid%>.getShort(<%=i%>);
<%
		} else if(javaType == JavaTypesManager.DATE) {
%>
			<%=outputConnection.getName() %>.<%=column.getLabel() %> = data_<%=cid%>.getDate(<%=i%>);
<%
		} else if(javaType == JavaTypesManager.BYTE) {
%>
			<%=outputConnection.getName() %>.<%=column.getLabel() %> = data_<%=cid%>.getByte(<%=i%>);
<%
		} else if(javaType == JavaTypesManager.BYTE_ARRAY) {
%>
			<%=outputConnection.getName() %>.<%=column.getLabel() %> = data_<%=cid%>.getRaw(<%=i%>);
<%
		} else if(javaType == JavaTypesManager.DOUBLE) {
%>
			<%=outputConnection.getName() %>.<%=column.getLabel() %> = data_<%=cid%>.getDouble(<%=i%>);
<%
		} else if(javaType == JavaTypesManager.BIGDECIMAL) {
%>
			<%=outputConnection.getName() %>.<%=column.getLabel() %> = data_<%=cid%>.getBigDecimal(<%=i%>);
<%
		} else if(javaType == JavaTypesManager.OBJECT) {
%>
			<%=outputConnection.getName() %>.<%=column.getLabel() %> = data_<%=cid%>.getValue(<%=i%>);
<%
		} else {
%>
			<%=outputConnection.getName() %>.<%=column.getLabel() %> = ParserUtils.parseTo_<%=typeToGenerate%>(data_<%=cid%>.getString(<%=i%>));
<%
		}
	}
%>